service: contact_books_flask

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

custom:
  tableName: 'contact-books-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-lincreate_userux
  dynamodb:
    start:
      migrate: true
      port: 8000
      inMemory: true
    stages:
      - ${self:provider.stage}

package:
  exclude:
    - node_modules/**
    - venv/**

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  listBooks:
    handler: wsgi.handler.handler
    events:
      - http: 'GET /contacts'
  getBook:
    handler: wsgi.handler.handler
    events:
      - http: 'GET /contacts/{proxy+}'
  addBook:
    handler: wsgi.handler.handler
    events:
      - http: 'POST /contacts'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
